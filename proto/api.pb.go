// Code generated by protoc-gen-go.
// source: proto/api.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	proto/api.proto
	proto/backend_config.proto
	proto/frontend_config.proto

It has these top-level messages:
	HelloRequest
	HelloResponse
	BackendConfig
	FrontendConfig
	TCPProxyRoute
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto1.ProtoPackageIsVersion1

type HelloRequest struct {
	Thingy string `protobuf:"bytes,1,opt,name=thingy" json:"thingy,omitempty"`
}

func (m *HelloRequest) Reset()                    { *m = HelloRequest{} }
func (m *HelloRequest) String() string            { return proto1.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()               {}
func (*HelloRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type HelloResponse struct {
	Greeting string `protobuf:"bytes,1,opt,name=greeting" json:"greeting,omitempty"`
}

func (m *HelloResponse) Reset()                    { *m = HelloResponse{} }
func (m *HelloResponse) String() string            { return proto1.CompactTextString(m) }
func (*HelloResponse) ProtoMessage()               {}
func (*HelloResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto1.RegisterType((*HelloRequest)(nil), "fproxy.proto.HelloRequest")
	proto1.RegisterType((*HelloResponse)(nil), "fproxy.proto.HelloResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for Backend service

type BackendClient interface {
	Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error)
}

type backendClient struct {
	cc *grpc.ClientConn
}

func NewBackendClient(cc *grpc.ClientConn) BackendClient {
	return &backendClient{cc}
}

func (c *backendClient) Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error) {
	out := new(HelloResponse)
	err := grpc.Invoke(ctx, "/fproxy.proto.Backend/Hello", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Backend service

type BackendServer interface {
	Hello(context.Context, *HelloRequest) (*HelloResponse, error)
}

func RegisterBackendServer(s *grpc.Server, srv BackendServer) {
	s.RegisterService(&_Backend_serviceDesc, srv)
}

func _Backend_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(BackendServer).Hello(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Backend_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fproxy.proto.Backend",
	HandlerType: (*BackendServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _Backend_Hello_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 150 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0x2c, 0xc8, 0xd4, 0x03, 0xb3, 0x84, 0x78, 0xd2, 0x80, 0x74, 0x45, 0x25, 0x84,
	0xa7, 0xa4, 0xc6, 0xc5, 0xe3, 0x91, 0x9a, 0x93, 0x93, 0x1f, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c,
	0x22, 0x24, 0xc6, 0xc5, 0x56, 0x92, 0x91, 0x99, 0x97, 0x5e, 0x29, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1,
	0x19, 0x04, 0xe5, 0x29, 0x69, 0x73, 0xf1, 0x42, 0xd5, 0x15, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a,
	0x49, 0x71, 0x71, 0xa4, 0x17, 0xa5, 0xa6, 0x96, 0x00, 0x65, 0xa1, 0x4a, 0xe1, 0x7c, 0x23, 0x6f,
	0x2e, 0x76, 0xa7, 0xc4, 0xe4, 0xec, 0xd4, 0xbc, 0x14, 0x21, 0x07, 0x2e, 0x56, 0xb0, 0x3e, 0x21,
	0x29, 0x3d, 0x64, 0x7b, 0xf5, 0x90, 0x2d, 0x95, 0x92, 0xc6, 0x2a, 0x07, 0xb1, 0xc8, 0x89, 0x3d,
	0x8a, 0x15, 0x2c, 0x9c, 0xc4, 0x06, 0xa6, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd0, 0x98,
	0xbe, 0xe9, 0xd2, 0x00, 0x00, 0x00,
}
