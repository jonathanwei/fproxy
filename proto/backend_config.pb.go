// Code generated by protoc-gen-go.
// source: proto/backend_config.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type BackendConfig struct {
	Server    *BackendConfig_Server `protobuf:"bytes,1,opt,name=server" json:"server,omitempty"`
	ServePath string                `protobuf:"bytes,2,opt,name=serve_path" json:"serve_path,omitempty"`
}

func (m *BackendConfig) Reset()                    { *m = BackendConfig{} }
func (m *BackendConfig) String() string            { return proto1.CompactTextString(m) }
func (*BackendConfig) ProtoMessage()               {}
func (*BackendConfig) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *BackendConfig) GetServer() *BackendConfig_Server {
	if m != nil {
		return m.Server
	}
	return nil
}

type BackendConfig_Server struct {
	Addr         string `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	CertFile     string `protobuf:"bytes,2,opt,name=cert_file" json:"cert_file,omitempty"`
	KeyFile      string `protobuf:"bytes,3,opt,name=key_file" json:"key_file,omitempty"`
	ClientCaFile string `protobuf:"bytes,4,opt,name=client_ca_file" json:"client_ca_file,omitempty"`
}

func (m *BackendConfig_Server) Reset()                    { *m = BackendConfig_Server{} }
func (m *BackendConfig_Server) String() string            { return proto1.CompactTextString(m) }
func (*BackendConfig_Server) ProtoMessage()               {}
func (*BackendConfig_Server) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

func init() {
	proto1.RegisterType((*BackendConfig)(nil), "fproxy.BackendConfig")
	proto1.RegisterType((*BackendConfig_Server)(nil), "fproxy.BackendConfig.Server")
}

var fileDescriptor1 = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0x2a, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0x4a, 0x4c, 0xce, 0x4e, 0xcd, 0x4b, 0x89, 0x4f, 0xce, 0xcf, 0x4b, 0xcb, 0x4c,
	0xd7, 0x03, 0x0b, 0x0a, 0xb1, 0xa5, 0x01, 0xe9, 0x8a, 0x4a, 0xa5, 0x07, 0x8c, 0x5c, 0xbc, 0x4e,
	0x10, 0x05, 0xce, 0x60, 0x79, 0x21, 0x13, 0x2e, 0xb6, 0xe2, 0xd4, 0xa2, 0xb2, 0xd4, 0x22, 0x09,
	0x46, 0x05, 0x46, 0x0d, 0x6e, 0x23, 0x19, 0x3d, 0x88, 0x52, 0x3d, 0x14, 0x65, 0x7a, 0xc1, 0x60,
	0x35, 0x41, 0x50, 0xb5, 0x42, 0xb2, 0x5c, 0x5c, 0x60, 0x56, 0x7c, 0x41, 0x62, 0x49, 0x86, 0x04,
	0x13, 0x50, 0x27, 0x67, 0x10, 0x27, 0x58, 0x24, 0x00, 0x28, 0x20, 0x55, 0xc5, 0xc5, 0x06, 0xd1,
	0x20, 0x24, 0xc4, 0xc5, 0x92, 0x98, 0x92, 0x02, 0x31, 0x9c, 0x33, 0x08, 0xcc, 0x16, 0x92, 0xe6,
	0xe2, 0x4c, 0x4e, 0x2d, 0x2a, 0x89, 0x4f, 0xcb, 0xcc, 0x49, 0x85, 0xea, 0xe5, 0x00, 0x09, 0xb8,
	0x01, 0xf9, 0x42, 0x92, 0x5c, 0x1c, 0xd9, 0xa9, 0x95, 0x10, 0x39, 0x66, 0xb0, 0x1c, 0x3b, 0x90,
	0x0f, 0x96, 0x52, 0xe1, 0xe2, 0x4b, 0xce, 0xc9, 0x4c, 0xcd, 0x2b, 0x89, 0x4f, 0x4e, 0x84, 0x28,
	0x60, 0x01, 0x2b, 0xe0, 0x81, 0x88, 0x3a, 0x27, 0x82, 0x54, 0x39, 0xb1, 0x47, 0xb1, 0x82, 0xfd,
	0x9c, 0xc4, 0x06, 0xa6, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xad, 0xa5, 0xc8, 0xfb, 0x18,
	0x01, 0x00, 0x00,
}
