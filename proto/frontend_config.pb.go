// Code generated by protoc-gen-go.
// source: proto/frontend_config.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type FrontendConfig struct {
	TcpProxyRoute []*TCPProxyRoute        `protobuf:"bytes,1,rep,name=tcp_proxy_route" json:"tcp_proxy_route,omitempty"`
	Backend       *FrontendConfig_Backend `protobuf:"bytes,2,opt,name=backend" json:"backend,omitempty"`
	HttpAddr      string                  `protobuf:"bytes,3,opt,name=http_addr" json:"http_addr,omitempty"`
	OauthConfig   *OauthConfig            `protobuf:"bytes,4,opt,name=oauth_config" json:"oauth_config,omitempty"`
	AuthCookieKey []byte                  `protobuf:"bytes,5,opt,name=auth_cookie_key,proto3" json:"auth_cookie_key,omitempty"`
	EmailToUserId map[string]string       `protobuf:"bytes,6,rep,name=email_to_user_id" json:"email_to_user_id,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *FrontendConfig) Reset()                    { *m = FrontendConfig{} }
func (m *FrontendConfig) String() string            { return proto1.CompactTextString(m) }
func (*FrontendConfig) ProtoMessage()               {}
func (*FrontendConfig) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *FrontendConfig) GetTcpProxyRoute() []*TCPProxyRoute {
	if m != nil {
		return m.TcpProxyRoute
	}
	return nil
}

func (m *FrontendConfig) GetBackend() *FrontendConfig_Backend {
	if m != nil {
		return m.Backend
	}
	return nil
}

func (m *FrontendConfig) GetOauthConfig() *OauthConfig {
	if m != nil {
		return m.OauthConfig
	}
	return nil
}

func (m *FrontendConfig) GetEmailToUserId() map[string]string {
	if m != nil {
		return m.EmailToUserId
	}
	return nil
}

// TODO: make this repeated.
type FrontendConfig_Backend struct {
	Addr           string `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	RootCaFile     string `protobuf:"bytes,2,opt,name=root_ca_file" json:"root_ca_file,omitempty"`
	ClientCertFile string `protobuf:"bytes,3,opt,name=client_cert_file" json:"client_cert_file,omitempty"`
	ClientKeyFile  string `protobuf:"bytes,4,opt,name=client_key_file" json:"client_key_file,omitempty"`
	ServerName     string `protobuf:"bytes,5,opt,name=server_name" json:"server_name,omitempty"`
}

func (m *FrontendConfig_Backend) Reset()                    { *m = FrontendConfig_Backend{} }
func (m *FrontendConfig_Backend) String() string            { return proto1.CompactTextString(m) }
func (*FrontendConfig_Backend) ProtoMessage()               {}
func (*FrontendConfig_Backend) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0, 0} }

type TCPProxyRoute struct {
	Listen string `protobuf:"bytes,1,opt,name=listen" json:"listen,omitempty"`
	Dial   string `protobuf:"bytes,2,opt,name=dial" json:"dial,omitempty"`
}

func (m *TCPProxyRoute) Reset()                    { *m = TCPProxyRoute{} }
func (m *TCPProxyRoute) String() string            { return proto1.CompactTextString(m) }
func (*TCPProxyRoute) ProtoMessage()               {}
func (*TCPProxyRoute) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

type OauthConfig struct {
	ClientId     string `protobuf:"bytes,1,opt,name=client_id" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret" json:"client_secret,omitempty"`
	RedirectUrl  string `protobuf:"bytes,3,opt,name=redirect_url" json:"redirect_url,omitempty"`
}

func (m *OauthConfig) Reset()                    { *m = OauthConfig{} }
func (m *OauthConfig) String() string            { return proto1.CompactTextString(m) }
func (*OauthConfig) ProtoMessage()               {}
func (*OauthConfig) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func init() {
	proto1.RegisterType((*FrontendConfig)(nil), "fproxy.FrontendConfig")
	proto1.RegisterType((*FrontendConfig_Backend)(nil), "fproxy.FrontendConfig.Backend")
	proto1.RegisterType((*TCPProxyRoute)(nil), "fproxy.TCPProxyRoute")
	proto1.RegisterType((*OauthConfig)(nil), "fproxy.OauthConfig")
}

var fileDescriptor4 = []byte{
	// 477 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x53, 0x5d, 0x6b, 0xd4, 0x40,
	0x14, 0x25, 0xdd, 0xaf, 0xee, 0xcd, 0xa6, 0x5d, 0xc6, 0x0f, 0x42, 0x0b, 0xba, 0xae, 0x20, 0xf5,
	0x65, 0x05, 0x05, 0x29, 0x8a, 0xa0, 0x5d, 0x5a, 0x28, 0x82, 0x96, 0xb1, 0x7d, 0xf1, 0x65, 0x98,
	0x26, 0xb3, 0x76, 0xd8, 0x34, 0xb3, 0xcc, 0x4e, 0x8a, 0xfb, 0xb7, 0xfc, 0x27, 0xfe, 0x23, 0xef,
	0xdc, 0x99, 0xd0, 0x16, 0xe9, 0x53, 0xee, 0x3d, 0x73, 0xce, 0xcd, 0x3d, 0x27, 0x13, 0xd8, 0x5f,
	0x59, 0xe3, 0xcc, 0x9b, 0x85, 0x35, 0xb5, 0x53, 0x75, 0x29, 0x0a, 0x53, 0x2f, 0xf4, 0xaf, 0x19,
	0xa1, 0xac, 0xbf, 0xc0, 0xe7, 0xef, 0xcd, 0xf4, 0x6f, 0x17, 0x76, 0x4e, 0x22, 0x63, 0x4e, 0x04,
	0xf6, 0x09, 0x76, 0x5d, 0xb1, 0x12, 0x74, 0x2e, 0xac, 0x69, 0x9c, 0xca, 0x93, 0x49, 0xe7, 0x20,
	0x7d, 0xfb, 0x64, 0x16, 0x44, 0xb3, 0xf3, 0xf9, 0xd9, 0x99, 0x2f, 0xb8, 0x3f, 0xe4, 0x19, 0xb2,
	0x6f, 0x5b, 0x76, 0x08, 0x83, 0x4b, 0x59, 0x2c, 0x71, 0x5e, 0xbe, 0x35, 0x49, 0x50, 0xf6, 0xac,
	0x95, 0xdd, 0x7f, 0xcf, 0xec, 0x28, 0xb0, 0x78, 0x4b, 0x67, 0xfb, 0x30, 0xbc, 0x72, 0x6e, 0x25,
	0x64, 0x59, 0xda, 0xbc, 0x83, 0xda, 0x21, 0xdf, 0xf6, 0xc0, 0x17, 0xec, 0xd9, 0x7b, 0x18, 0x19,
	0xd9, 0xb8, 0xab, 0x68, 0x23, 0xef, 0xd2, 0xec, 0x47, 0xed, 0xec, 0xef, 0xfe, 0x2c, 0x0c, 0xe6,
	0xa9, 0xb9, 0x6d, 0xd8, 0x2b, 0xd8, 0x8d, 0x32, 0xb3, 0xd4, 0x4a, 0x2c, 0xd5, 0x26, 0xef, 0xa1,
	0x74, 0xc4, 0xb3, 0x40, 0xf2, 0xe8, 0x57, 0xb5, 0x61, 0x1c, 0xc6, 0xea, 0x5a, 0xea, 0x4a, 0x38,
	0x23, 0x9a, 0xb5, 0xb2, 0x42, 0x97, 0x79, 0x9f, 0x6c, 0xbf, 0x7e, 0x60, 0xff, 0x63, 0x4f, 0x3f,
	0x37, 0x17, 0x48, 0x3e, 0x2d, 0x8f, 0x6b, 0x67, 0x37, 0x3c, 0x53, 0x77, 0xb1, 0xbd, 0x3f, 0x09,
	0x0c, 0xa2, 0x4b, 0xc6, 0xa0, 0x4b, 0xbe, 0x12, 0xf2, 0x45, 0x35, 0x9b, 0xc0, 0xc8, 0x1a, 0xe3,
	0x44, 0x21, 0xc5, 0x42, 0x57, 0x8a, 0xf2, 0x1a, 0x72, 0xf0, 0xd8, 0x5c, 0x9e, 0x20, 0xc2, 0x0e,
	0x60, 0x5c, 0x54, 0x5a, 0xd5, 0xc8, 0x51, 0xd6, 0x05, 0x56, 0x48, 0x66, 0x27, 0xe0, 0x73, 0x84,
	0x89, 0x89, 0x3e, 0x23, 0x13, 0x2d, 0x06, 0x62, 0x97, 0x88, 0x59, 0x80, 0xd1, 0x23, 0xf1, 0x9e,
	0x43, 0x8a, 0xcb, 0xdd, 0xa0, 0xc1, 0x5a, 0x5e, 0x2b, 0xca, 0x02, 0x5f, 0x19, 0xa0, 0x6f, 0x88,
	0xec, 0x7d, 0x06, 0xf6, 0xbf, 0x33, 0x36, 0x86, 0x8e, 0x8f, 0x2e, 0x6c, 0xef, 0x4b, 0xf6, 0x18,
	0x7a, 0x37, 0xb2, 0x6a, 0xda, 0xad, 0x43, 0xf3, 0x61, 0xeb, 0x30, 0x99, 0x7e, 0x84, 0xec, 0xde,
	0x0d, 0x61, 0x4f, 0xa1, 0x5f, 0xe9, 0x35, 0x46, 0x17, 0xf5, 0xb1, 0xf3, 0x99, 0x94, 0x5a, 0x56,
	0x71, 0x02, 0xd5, 0x53, 0x0b, 0xe9, 0x9d, 0x6f, 0xe9, 0xef, 0x44, 0xb4, 0x85, 0xdf, 0x23, 0xa8,
	0xb7, 0x03, 0x70, 0x5a, 0xb2, 0x97, 0x10, 0xcd, 0x89, 0xb5, 0x2a, 0xac, 0x72, 0x71, 0xd0, 0x28,
	0x80, 0x3f, 0x08, 0x63, 0x2f, 0x30, 0x64, 0x55, 0x6a, 0xab, 0x0a, 0x27, 0x1a, 0x5b, 0xc5, 0xf8,
	0xd2, 0x16, 0xbb, 0xb0, 0xd5, 0xd1, 0xe0, 0x67, 0x8f, 0xfe, 0x8a, 0xcb, 0x3e, 0x3d, 0xde, 0xfd,
	0x0b, 0x00, 0x00, 0xff, 0xff, 0xa1, 0xa5, 0x86, 0x89, 0x3b, 0x03, 0x00, 0x00,
}
